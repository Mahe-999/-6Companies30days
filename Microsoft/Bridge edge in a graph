class Solution
{
	public:
    //Function to find if the given edge is a bridge in graph.
    void check(vector<int>adj[],vector<bool>&visited,int src)
    {
        visited[src]=1;
        for(auto it:adj[src])
        {
            if(!visited[it])
            {
                check(adj,visited,it);
            }
        }
    }
    int isBridge(int V, vector<int> adj[], int c, int d) 
    {
        // Code here
        for (int i = 0; i < adj[c].size(); i++) 
        {
            if (adj[c][i] == d) 
            {
                adj[c].erase(adj[c].begin() + i);
                break;
            }
        }
 
    // Traversing through the second vector list
    // and removing the first element from it
       for (int i = 0; i < adj[d].size(); i++)
       {
          if (adj[d][i] == c) 
          {
              adj[d].erase(adj[d].begin() + i);
              break;
          }
       }
       
       vector<bool>visited(V,0);
       check(adj,visited,c);
       if(visited[d]==false) return 1;
       return 0;
    }
};
